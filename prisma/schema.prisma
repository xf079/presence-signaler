generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../data/dev.db"
}

model User {
  id     String  @id @default(cuid())
  email  String  @unique
  name   String
  avatar String? @default("")
  bio    String? @default("")

  password String
  salt     String

  online Boolean @default(false)

  friends       FriendRelationship[] @relation("UserFriends")
  rooms         Room[]
  notifications Notification[]

  lastLogin   DateTime?
  lastLoginIp String?

  deleted   Boolean   @default(false)
  deletedAt DateTime?

  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  FriendRelationship FriendRelationship[]

  @@index([email])
  @@map("users")
}

model FriendRelationship {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  friend   User   @relation("UserFriends", fields: [friendId], references: [id])
  friendId String

  deleted   Boolean   @default(false)
  deletedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, friendId])
  @@map("friend_relationships")
}

model Room {
  id   String @id @default(cuid())
  name String

  users User[]

  deleted   Boolean   @default(false)
  deletedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("rooms")
}

model Notification {
  id      String  @id @default(cuid())
  userId  String
  user    User    @relation(fields: [userId], references: [id])
  type    String
  read    Boolean @default(false)
  message String?

  createdAt DateTime @default(now())

  @@map("notifications")
}
